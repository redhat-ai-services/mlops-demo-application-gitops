apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: update-values-image-tag
  annotations:
    tekton.dev/displayName: "Update Image Tag in Helm Values File"
    description: |
      Updates the Image Tag in Values file located at {params.filePath}.{params.fileName}. 
      Uses shared workspace source to access file system to work in.
spec:
  params:
  # - name: directory
  #   description: the directory to work in
  #   type: string
  - name: filePath
    description: Path of the file to be updated
    type: string
  - name: fileName
    description: Name of the file to be updated
    type: string
  - name: imageTag
    description: The image tag to be written into the YAML
    type: string
  - name: verbose
    description: Log the commands used during execution
    type: string
    default: "true"
  workspaces:
    - name: source
  # volumes:
  # - name: repository
  #   emptyDir: {}
  steps:
  - name: update-yaml
    image: registry.access.redhat.com/ubi8/ubi-minimal:8.3
    workingDir: $(workspaces.source.path)
    # volumeMounts:
    # - name: repository
    #   mountPath: /workspace/repository
    script: |
      #!/usr/bin/env sh
      # set -e

      if [[ "$(params.verbose)" == "true" ]] ; then
        echo "**** Updating $(params.fileName) image tag to $(params.imageTag)"
      fi
      
      imageTagTrimmed=$(echo "${m//[$'\t\r\n']}")
      sed -i "s/tag: ".*"/tag: "$imageTagTrimmed"/" ./$(params.filePath)/$(params.fileName)

      cat ./$(params.filePath)/$(params.fileName)
      
  # - name: commit-push-changes
  #   image: alpine/git:v2.26.2
  #   workingDir: "/workspace/repository"
  #   volumeMounts:
  #   - name: repository
  #     mountPath: /workspace/repository
  #   script: |
  #     #!/usr/bin/env sh
  #     set -e

  #     git config --global user.email "tekton@tekton.dev"
  #     git config --global user.name "OpenShift Pipeline"
  #     git add .
  #     git commit --allow-empty -m "[OpenShift Pipeline] Updating $(params.fileName) image to $(params.image):$(params.imageTag)"
  #     git push origin "$(params.gitRepositoryRevision)"
