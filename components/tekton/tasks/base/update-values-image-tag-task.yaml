apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: update-values-image-tag
  annotations:
    tekton.dev/displayName: "Update Image Tag in Helm Values File"
    description: |
      Updates the Image Tag in Values file located at {params.filePath}.{params.fileName}.
      Uses shared workspace source to access file system to work in.
spec:
  params:
    - name: filePath
      description: Path of the file to be updated
      type: string
    - name: fileName
      description: Name of the file to be updated
      type: string
    - name: imageTag
      description: The image tag to be written into the YAML
      type: string
    - name: gitRepositoryName
      description: Name of the repository to be pushed
      type: string
    - name: gitRepositoryRevision
      description: Branch to push to
      type: string
      default: main
    - name: commitMessage
      description: The git commit message
      type: string
    - name: verbose
      description: Log the commands used during execution
      type: string
      default: "true"
  workspaces:
    - name: source
  steps:
    - name: update-yaml
      image: registry.access.redhat.com/ubi8/ubi-minimal:8.3
      workingDir: $(workspaces.source.path)
      script: |
        #!/usr/bin/env sh
        set -e

        echo "**** Updating $(params.fileName) image tag to $(params.imageTag)"
        
        imageTag=$(params.imageTag)
        imageTagTrimmed=$(echo "${imageTag//[$'\t\r\n']}")
        sed -i "s#tag: ".*"#tag: \"$imageTag\"#" ./$(params.filePath)/$(params.fileName)
    - name: push-repository
      image: alpine/git:v2.26.2
      workingDir: $(workspaces.source.path)
      script: |
        #!/usr/bin/env sh
        # set -e

        if [[ "$(params.verbose)" == "true" ]] ; then
          echo "**** Pushing $(params.gitRepositoryName) repository branch $(params.gitRepositoryRevision) to remote origin"
        fi

        git config --global user.email "tekton@tekton.dev"
        git config --global user.name "OpenShift Pipeline"

        git switch $(params.gitRepositoryRevision)
        git add .

        git commit --allow-empty -m "[OpenShift Pipeline] $(params.commitMessage)"

        git remote set-url origin $(params.gitRepositoryName)

        git push
