apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: git-push-repository
  annotations:
    tekton.dev/displayName: "Push Local Git Repository to Remote"
    description: |
      Pushes a specified git repository with parameter commit message to its remote origin
spec:
  params:
    - name: gitRepositoryName
      description: Name of the repository to be pushed
      type: string
    - name: gitRepositoryRevision
      description: Branch to push to
      type: string
    - name: commitMessage
      description: The git commit message
      type: string
    - name: verbose
      description: Log the commands used during execution
      type: string
      default: "true"
    - name: githubSSHSecret
      description: The name of the secret containing the Github SSH Private Key
      type: string
      default: "mlops-demo-application-gitops-github-ssh-key"
    - name: githubSSHSecretKey
      description: The name of the key in the secret which contains the SSH Private Key value
      type: string
      default: "ssh-privatekey"
  workspaces:
    - name: source
  steps:
    - name: push-repository
      env:
        - name: GITHUB_SSH_KEY
          valueFrom:
            secretKeyRef:
              name: $(params.githubSSHSecret)
              key: $(params.githubSSHSecretKey)
      image: alpine/git:v2.26.2
      workingDir: $(workspaces.source.path)
      script: |
        #!/usr/bin/env sh
        # set -e

        if [[ "$(params.verbose)" == "true" ]] ; then
          echo "**** Pushing $(params.gitRepositoryName) repository branch $(params.gitRepositoryRevision) to remote origin"
        fi

        git config --global user.email "tekton@tekton.dev"
        git config --global user.name "OpenShift Pipeline"

        git switch $(params.gitRepositoryRevision)
        git add .
        git commit --allow-empty -m "[OpenShift Pipeline] $(params.commitMessage)"
        git remote set-url origin git@github.com:rh-intelligent-application-practice/mlops-demo-application-gitops.git

        # apk add --update openssl
        mkdir ~/.ssh

        # Add Private Key from Secret
        echo $GITHUB_SSH_KEY > id_rsa

        sed -i "s/----- /-----\n/" id_rsa
        sed -i "s/ -----/\n-----/" id_rsa

        mv id_rsa ~/.ssh/id_rsa
        chmod 400 ~/.ssh/id_rsa
        ssh-keygen -y -f ~/.ssh/id_rsa > ~/.ssh/id_rsa.pub
        GIT_SSH_COMMAND='ssh -i ~/.ssh/id_rsa' git push origin $(params.gitRepositoryRevision)

        git push
