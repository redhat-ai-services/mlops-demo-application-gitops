apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: tox
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/categories: Testing
    tekton.dev/tags: python, tox
    tekton.dev/displayName: tox
    tekton.dev/platforms: "linux/amd64,linux/s390x,linux/ppc64le"
spec:
  description: >-
    This task will run tox on the provided inputs.

  workspaces:
    - name: source
  params:
    - name: PYTHON
      description: The used Python version, more precisely the tag for the Python image
      type: string
      default: "latest"
    - name: ARGS
      description: The additional arguments to be used with tox
      type: string
      default: "--parallel auto"
    - name: SOURCE_PATH
      description: The path to the source code
      default: "."
    - name: REQUIREMENTS_FILE
      description: The name of the requirements file inside the source location, with fallback to the requirements file in the root location
      default: "requirements.txt"
  steps:
    - name: unit-test
      image: image-registry.openshift-image-registry.svc:5000/openshift/python:$(inputs.params.PYTHON)
      workingDir: $(workspaces.source.path)
      script: |
        export PATH=$PATH:$HOME/.local/bin

        if [ -e "$(inputs.params.SOURCE_PATH)"/"$(inputs.params.REQUIREMENTS_FILE)" ];
        then
          pip install -r "$(inputs.params.SOURCE_PATH)"/"$(inputs.params.REQUIREMENTS_FILE)"
          pip show tox || {
            printf "###\nWarning: Tox is missing in your test requirements file\n###";
            pip install tox
          }
        else
          if [ -e "$(inputs.params.REQUIREMENTS_FILE)" ];
          then
            pip install -r "$(inputs.params.REQUIREMENTS_FILE)"
          fi
          pip install tox
        fi
        if [ -z "$(inputs.params.ARGS)" ]; then
          tox "$(inputs.params.SOURCE_PATH)"
        else
          tox $(inputs.params.ARGS) "$(inputs.params.SOURCE_PATH)"
        fi
