apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: iris-inference-service
spec:
  params:
    - name: APP_NAME
      type: string
      default: iris-inference-service
    - name: GIT_REPO
      type: string
      default: >-
        https://github.com/rh-intelligent-application-practice/mlops-demo-iris-inference-service.git
    - name: GIT_REVISION
      type: string
      default: main
    - name: IMAGE_NAME
      type: string
      default: >-
        image-registry.openshift-image-registry.svc:5000/mlops-demo-pipelines/iris-inference-service
    - name: PATH_CONTEXT
      type: string
      default: .
    - name: VERSION
      type: string
      default: 3.9-ubi8
    - name: GITOPS_GIT_REPO
      type: string
      description: The gitops git repository url
      default: git@github.com:rh-intelligent-application-practice/mlops-demo-application-gitops.git
    - name: GITOPS_GIT_REVISION
      type: string
      default: main
      description: The gitops git repository revision
    - name: MODEL_VERSION
      description: The model version number
      type: string
      default: iris-model_2023-03-13
  tasks:
    - name: fetch-sourcecode-repository
      params:
        - name: url
          value: $(params.GIT_REPO)
        - name: revision
          value: $(params.GIT_REVISION)
        - name: subdirectory
          value: ''
        - name: deleteExisting
          value: 'true'
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: sourcecode-workspace
    - name: download-model
      params:
        - name: OBJECT_BUCKET_CLAIM
          value: iris-model
        - name: OBJECT_BUCKET_CLAIM_NAMESPACE
          value: mlops-demo-datascience
        - name: SOURCE_FILE
          value: $(params.MODEL_VERSION)
        - name: TARGET_FILE
          value: ./models/model
      taskRef:
        kind: Task
        name: download-from-obc
      workspaces:
        - name: source
          workspace: source
        - name: empty-dir
          workspace: empty-dir
    - name: test
      runAfter:
        - fetch-sourcecode-repository
      params:
        - name: PYTHON
          value: $(params.PYTHON_VERSION)
      taskRef:
        kind: Task
        name: tox
      workspaces:
        - name: source
          workspace: sourcecode-workspace
    - name: generate-tag
      runAfter:
        - test
      params:
        - name: SHA
          value: $(tasks.fetch-sourcecode-repository.results.commit)
      taskRef:
        kind: Task
        name: generate-tag
    - name: build
      runAfter:
        - test
      params:
        - name: IMAGE
          value: $(params.IMAGE_NAME)
        - name: TLSVERIFY
          value: 'false'
        - name: PATH_CONTEXT
          value: $(params.PATH_CONTEXT)
        - name: VERSION
          value: $(params.PYTHON_VERSION)
      taskRef:
        kind: ClusterTask
        name: s2i-python
      workspaces:
        - name: source
          workspace: sourcecode-workspace
    - name: tag-image
      runAfter:
        - generate-tag
        - build
      taskRef:
        kind: ClusterTask
        name: openshift-client
      params:
        - name: SCRIPT
          value: |
            oc tag \
            $(params.APP_NAME)@$(tasks.build.results.IMAGE_DIGEST) \
            $(params.APP_NAME):$(tasks.generate-tag.results.image-tag)
    - name: fetch-gitops-repository
      taskRef:
        kind: ClusterTask
        name: git-clone
      params:
        - name: url
          value: $(params.GITOPS_GIT_REPO)
        - name: revision
          value: $(params.GITOPS_GIT_REVISION)
        - name: deleteExisting
          value: 'true'
      workspaces:
        - name: output
          workspace: gitops-workspace
    - name: update-dev-image
      runAfter:
        - fetch-gitops-repository
        - tag-image
      taskRef:
        kind: Task
        name: update-values-image-tag
      params:
        - name: fileName
          value: values.yaml
        - name: filePath
          value: environments/dev/charts/iris-inference-service
        - name: imageTag
          value: $(tasks.generate-tag.results.image-tag)
        - name: gitRepositoryName
          value: $(params.GITOPS_GIT_REPO)
        - name: gitRepositoryRevision
          value: $(params.GITOPS_GIT_REVISION)
        - name: commitMessage
          value: "Updating Values YAML Image tag to $(tasks.generate-tag.results.image-tag)"
      workspaces:
        - name: source
          workspace: gitops-workspace
    - name: sync-dev
      runAfter:
        - update-dev-image
      taskRef:
        kind: Task
        name: argocd-task-sync-and-wait
      params:
        - name: application-name
          value: iris-inference-service-dev
        - name: deployment-name
          value: iris-inference-service-iris-inference-service-0-classifier
        - name: deployment-namespace
          value: mlops-demo-dev
    - name: update-test-image
      when:
        - input: $(params.GIT_REVISION)
          operator: in
          values: ["main"]
      runAfter:
        - sync-dev
      taskRef:
        kind: Task
        name: update-values-image-tag
      params:
        - name: fileName
          value: values.yaml
        - name: filePath
          value: environments/test/charts/iris-inference-service
        - name: imageTag
          value: $(tasks.generate-tag.results.image-tag)
        - name: gitRepositoryName
          value: $(params.GITOPS_GIT_REPO)
        - name: gitRepositoryRevision
          value: $(params.GITOPS_GIT_REVISION)
        - name: commitMessage
          value: "Updating Values YAML Image tag to $(tasks.generate-tag.results.image-tag)"
      workspaces:
        - name: source
          workspace: gitops-workspace
    - name: sync-test
      runAfter:
        - update-test-image
      taskRef:
        kind: Task
        name: argocd-task-sync-and-wait
      params:
        - name: application-name
          value: iris-inference-service-test
        - name: deployment-name
          value: iris-inference-service-iris-inference-service-0-classifier
        - name: deployment-namespace
          value: mlops-demo-test
    - name: update-prod-image
      runAfter:
        - sync-test
      taskRef:
        kind: Task
        name: update-values-image-tag
      params:
        - name: fileName
          value: values.yaml
        - name: filePath
          value: environments/prod/charts/iris-inference-service
        - name: imageTag
          value: $(tasks.generate-tag.results.image-tag)
        - name: gitRepositoryName
          value: $(params.GITOPS_GIT_REPO)
        - name: gitRepositoryRevision
          value: $(params.GITOPS_GIT_REVISION)
        - name: commitMessage
          value: "Updating Values YAML Image tag to $(tasks.generate-tag.results.image-tag)"
      workspaces:
        - name: source
          workspace: gitops-workspace
    - name: sync-prod
      runAfter:
        - update-prod-image
      taskRef:
        kind: Task
        name: argocd-task-sync-and-wait
      params:
        - name: application-name
          value: iris-inference-service-prod
        - name: deployment-name
          value: iris-inference-service-iris-inference-service-0-classifier
        - name: deployment-namespace
          value: mlops-demo-prod
  workspaces:
    - name: sourcecode-workspace
    - name: gitops-workspace
    - name: empty-dir
